{"version":3,"file":"main.155e2033563d3ef09c31.hot-update.js","sources":["webpack:///./src/components/TabMenu/TabMenu.tsx"],"sourcesContent":["import React, { cloneElement, Children, ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport Flex from \"../Box/Flex\";\nimport { TabMenuProps } from \"./types\";\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n`;\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  flex-grow: 1;\n\n  & > button + button {\n    margin-left: 16px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-grow: 0;\n  }\n`;\n\nconst ButtonMenu: React.FC<TabMenuProps> = ({ activeIndex = 0, onItemClick, children }) => {\n  return (\n    <Wrapper p={[\"0 4px\", \"0 16px\"]}>\n      <Inner>\n        {Children.map(children, (child: ReactElement, index) => {\n          const isActive = activeIndex === index;\n          return cloneElement(child, {\n            isActive,\n            onClick: onItemClick ? () => onItemClick(index) : undefined,\n            color: isActive ? \"textSubtle\" : \"textDisabled\",\n            backgroundColor: \"transparent\",\n            borderWidths: \"1\",\n            borderStyle: \"red\"\n          });\n        })}\n      </Inner>\n    </Wrapper>\n  );\n};\n\nexport default ButtonMenu;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAQA;AAXA;AADA;AAgBA;AACA;AAnBA;AAoBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}