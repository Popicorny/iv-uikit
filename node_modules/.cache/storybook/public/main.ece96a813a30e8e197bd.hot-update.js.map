{"version":3,"file":"main.ece96a813a30e8e197bd.hot-update.js","sources":["webpack:///./src/components/Box/Box.tsx","webpack:///./src/components/Box/Flex.tsx","webpack:///./src/components/Box/Grid.tsx","webpack:///./src/components/Breadcrumbs/Breadcrumbs.tsx","webpack:///./src/components/Button/StyledButton.tsx","webpack:///./src/components/ButtonMenu/ButtonMenu.tsx","webpack:///./src/components/Card/CardBody.tsx","webpack:///./src/components/Card/CardFooter.tsx","webpack:///./src/components/Card/CardHeader.tsx","webpack:///./src/components/Card/StyledCard.tsx","webpack:///./src/components/Image/Wrapper.tsx","webpack:///./src/components/Image/styles.tsx","webpack:///./src/components/Message/Message.tsx","webpack:///./src/components/Progress/StyledProgress.tsx","webpack:///./src/components/Radio/Radio.tsx","webpack:///./src/components/Skeleton/Skeleton.tsx","webpack:///./src/components/Svg/Svg.tsx","webpack:///./src/components/TabMenu/Tab.tsx","webpack:///./src/components/Tag/StyledTag.tsx","webpack:///./src/components/Text/Text.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { background, border, layout, position, space } from \"styled-system\";\nimport { BoxProps } from \"./types\";\n\nconst Box = styled.div<BoxProps>`\n  ${background}\n  ${border}\n  ${layout}\n  ${position}\n  ${space}\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\nimport { flexbox } from \"styled-system\";\nimport Box from \"./Box\";\nimport { FlexProps } from \"./types\";\n\nconst Flex = styled(Box)<FlexProps>`\n  display: flex;\n  ${flexbox}\n`;\n\nexport default Flex;\n","import styled from \"styled-components\";\nimport { grid, flexbox } from \"styled-system\";\nimport Box from \"./Box\";\nimport { GridProps } from \"./types\";\n\nconst Grid = styled(Box)<GridProps>`\n  display: grid;\n  ${flexbox}\n  ${grid}\n`;\n\nexport default Grid;\n","/* eslint-disable react/no-array-index-key */\nimport React, { Children, isValidElement, ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport ChevronRightIcon from \"../Svg/Icons/ChevronRight\";\nimport { BreadcrumbsProps } from \"./types\";\n\nconst Separator = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.textDisabled};\n  display: flex;\n  justify-content: center;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nconst StyledBreadcrumbs = styled.ul`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n\n  ${space}\n`;\n\nconst insertSeparators = (items: ReactNode[], separator: BreadcrumbsProps[\"separator\"]) =>\n  items.reduce((accum: ReactNode[], item, index) => {\n    if (index === 0) {\n      return [...accum, item];\n    }\n\n    return [\n      ...accum,\n      <Separator aria-hidden key={`seperator-${index}`}>\n        {separator}\n      </Separator>,\n      item,\n    ];\n  }, []);\n\nconst DefaultSeparator = <ChevronRightIcon color=\"currentColor\" width=\"24px\" />;\n\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({ separator = DefaultSeparator, children }) => {\n  const validItems = Children.toArray(children).filter((child) => isValidElement(child));\n  const items = insertSeparators(validItems, separator);\n\n  return (\n    <StyledBreadcrumbs>\n      {items.map((item, index) => (\n        <li key={`child-${index}`}>{item}</li>\n      ))}\n    </StyledBreadcrumbs>\n  );\n};\n\nexport default Breadcrumbs;\n","import styled, { DefaultTheme } from \"styled-components\";\nimport { space, layout, variant } from \"styled-system\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nimport { BaseButtonProps } from \"./types\";\n\ninterface ThemedButtonProps extends BaseButtonProps {\n  theme: DefaultTheme;\n}\n\ninterface TransientButtonProps extends ThemedButtonProps {\n  $isLoading?: boolean;\n}\n\nconst getDisabledStyles = ({ $isLoading, theme }: TransientButtonProps) => {\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n\n/**\n * This is to get around an issue where if you use a Link component\n * React will throw a invalid DOM attribute error\n * @see https://github.com/styled-components/styled-components/issues/135\n */\n\nconst getOpacity = ({ $isLoading = false }: TransientButtonProps) => {\n  return $isLoading ? \".5\" : \"1\";\n};\n\nconst StyledButton = styled.button<BaseButtonProps>`\n  align-items: center;\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 12px;\n  font-weight: 400;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    opacity: 0.65;\n  }\n\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n\n  ${getDisabledStyles}\n  ${variant({\n    prop: \"scale\",\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${layout}\n  ${space}\n`;\n\nexport default StyledButton;\n","import React, { cloneElement, Children, ReactElement } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { scales, variants } from \"../Button/types\";\nimport { ButtonMenuProps } from \"./types\";\n\ninterface StyledButtonMenuProps extends ButtonMenuProps {\n  theme: DefaultTheme;\n}\n\nconst getBackgroundColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? \"input\" : \"tertiary\"];\n};\n\nconst getBorderColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? \"inputSecondary\" : \"disabled\"];\n};\n\nconst StyledButtonMenu = styled.div<StyledButtonMenuProps>`\n  display: ${({ fullWidth }) => (fullWidth ? \"flex\" : \"inline-flex\")};\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"auto\")};\n\n  & > button,\n  & > a {\n    margin-right: ${({ fullWidth }) => (fullWidth ? \"0px\" : \"12px\")}; // To avoid focus shadow overlap\n    flex: ${({ fullWidth }) => (fullWidth ? 1 : \"auto\")};\n  }\n\n  & > button + button,\n  & > a + a {\n    margin-right: 12px; // To avoid focus shadow overlap\n  }\n\n  & > button,\n  & a {\n    box-shadow: none;\n  }\n\n  ${({ disabled, theme, variant }) => {\n    if (disabled) {\n      return `\n        opacity: 0.5;\n\n        & > button:disabled {\n          background-color: transparent;\n          color: ${variant === variants.PRIMARY ? theme.colors.primary : theme.colors.textSubtle};\n        }\n    `;\n    }\n    return \"\";\n  }}\n  ${space}\n`;\n\nconst ButtonMenu: React.FC<ButtonMenuProps> = ({\n  activeIndex = 0,\n  scale = scales.MD,\n  variant = variants.PRIMARY,\n  onItemClick,\n  disabled,\n  children,\n  fullWidth = false,\n  ...props\n}) => {\n  return (\n    <StyledButtonMenu disabled={disabled} variant={variant} fullWidth={fullWidth} {...props}>\n      {Children.map(children, (child: ReactElement, index) => {\n        return cloneElement(child, {\n          isActive: activeIndex === index,\n          onClick: onItemClick ? () => onItemClick(index) : undefined,\n          scale,\n          variant,\n          disabled,\n        });\n      })}\n    </StyledButtonMenu>\n  );\n};\n\nexport default ButtonMenu;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardFooterProps = SpaceProps;\n\nconst CardFooter = styled.div<CardFooterProps>`\n  border-top: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  ${space}\n`;\n\nCardFooter.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardFooter;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\nimport { CardTheme } from \"./types\";\n\nexport interface CardHeaderProps extends SpaceProps {\n  variant?: keyof CardTheme[\"cardHeaderBackground\"];\n}\n\nconst CardHeader = styled.div<CardHeaderProps>`\n  background: ${({ theme, variant = \"default\" }) => theme.card.cardHeaderBackground[variant]};\n  ${space}\n`;\n\nCardHeader.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardHeader;\n","import styled, { DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { CardProps } from \"./types\";\n\ninterface StyledCardProps extends CardProps {\n  theme: DefaultTheme;\n}\n\n/**\n * Priority: Warning --> Success --> Active\n */\nconst getBoxShadow = ({ isActive, isSuccess, isWarning, theme }: StyledCardProps) => {\n  if (isWarning) {\n    return theme.card.boxShadowWarning;\n  }\n\n  if (isSuccess) {\n    return theme.card.boxShadowSuccess;\n  }\n\n  if (isActive) {\n    return theme.card.boxShadowActive;\n  }\n\n  return theme.card.boxShadow;\n};\n\nconst StyledCard = styled.div<StyledCardProps>`\n  background-color: ${({ theme }) => theme.card.background};\n  border: ${({ theme }) => theme.card.boxShadow};\n  border-radius: ${({ theme }) => theme.radii.card};\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme, isDisabled }) => theme.colors[isDisabled ? \"textDisabled\" : \"text\"]};\n  overflow: hidden;\n  position: relative;\n\n  ${space}\n`;\n\nStyledCard.defaultProps = {\n  isActive: false,\n  isSuccess: false,\n  isWarning: false,\n  isDisabled: false,\n};\n\nexport default StyledCard;\n","import React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { WrapperProps } from \"./types\";\n\nconst StyledWrapper = styled.div<{ $width: number; $height: number }>`\n  max-height: ${({ $height }) => $height}px;\n  max-width: ${({ $width }) => $width}px;\n  position: relative;\n  width: 100%;\n\n  &:after {\n    content: \"\";\n    display: block;\n    padding-top: ${({ $width, $height }) => ($height / $width) * 100}%;\n  }\n\n  ${space}\n`;\n\nconst Wrapper = forwardRef<HTMLDivElement, WrapperProps>(({ width, height, ...props }, ref) => {\n  return <StyledWrapper ref={ref} $width={width} $height={height} {...props} />;\n});\n\nexport default Wrapper;\n","import styled from \"styled-components\";\nimport { variant as StyledSystemVariant } from \"styled-system\";\nimport { ImageProps, Variant, variants } from \"./types\";\nimport TokenImage from \"./TokenImage\";\n\ninterface StyledImageProps extends ImageProps {\n  variant: Variant;\n}\n\nexport const StyledPrimaryImage = styled(TokenImage)<StyledImageProps>`\n  position: absolute;\n  width: ${({ variant }) =>\n    variant === variants.DEFAULT ? \"92%\" : \"82%\"}; // 92, 82 are arbitrary numbers to fit the variant\n\n  ${StyledSystemVariant({\n    variants: {\n      [variants.DEFAULT]: {\n        bottom: \"auto\",\n        left: 0,\n        right: \"auto\",\n        top: 0,\n        zIndex: 5,\n      },\n      [variants.INVERTED]: {\n        bottom: 0,\n        left: \"auto\",\n        right: 0,\n        top: \"auto\",\n        zIndex: 6,\n      },\n    },\n  })}\n`;\n\nexport const StyledSecondaryImage = styled(TokenImage)<StyledImageProps>`\n  position: absolute;\n  width: 50%;\n\n  ${StyledSystemVariant({\n    variants: {\n      [variants.DEFAULT]: {\n        bottom: 0,\n        left: \"auto\",\n        right: 0,\n        top: \"auto\",\n        zIndex: 6,\n      },\n      [variants.INVERTED]: {\n        bottom: \"auto\",\n        left: 0,\n        right: \"auto\",\n        top: 0,\n        zIndex: 5,\n      },\n    },\n  })}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { variant as systemVariant, space } from \"styled-system\";\nimport { WarningIcon, ErrorIcon } from \"../Svg\";\nimport { Box } from \"../Box\";\nimport { MessageProps } from \"./types\";\nimport variants from \"./theme\";\n\nconst Icons = {\n  warning: WarningIcon,\n  danger: ErrorIcon,\n};\n\nconst MessageContainer = styled.div<MessageProps>`\n  display: flex;\n  background-color: gray;\n  padding: 16px;\n  border-radius: 16px;\n  border: solid 1px;\n\n  ${space}\n  ${systemVariant({\n    variants,\n  })}\n`;\n\nconst Message: React.FC<MessageProps> = ({ children, variant, icon, ...props }) => {\n  const Icon = Icons[variant];\n  return (\n    <MessageContainer variant={variant} {...props}>\n      <Box mr=\"12px\">{icon ?? <Icon color={variants[variant].borderColor} width=\"24px\" />}</Box>\n      {children}\n    </MessageContainer>\n  );\n};\n\nexport default Message;\n","import styled from \"styled-components\";\nimport { space, variant as StyledSystemVariant } from \"styled-system\";\nimport { styleVariants, styleScales } from \"./themes\";\nimport { ProgressProps, variants } from \"./types\";\n\ninterface BarProps {\n  primary?: boolean;\n}\n\nexport const Bar = styled.div<BarProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${(props) => (props.primary ? props.theme.colors.secondary : `${props.theme.colors.secondary}80`)};\n  height: 100%;\n  transition: width 200ms ease;\n`;\n\nBar.defaultProps = {\n  primary: false,\n};\n\ninterface StyledProgressProps {\n  variant: ProgressProps[\"variant\"];\n  scale: ProgressProps[\"scale\"];\n}\n\nconst StyledProgress = styled.div<StyledProgressProps>`\n  position: relative;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  overflow: hidden;\n\n  ${Bar} {\n    border-top-left-radius: ${({ variant }) => (variant === variants.FLAT ? \"0\" : \"32px\")};\n    border-bottom-left-radius: ${({ variant }) => (variant === variants.FLAT ? \"0\" : \"32px\")};\n  }\n\n  ${StyledSystemVariant({\n    variants: styleVariants,\n  })}\n  ${StyledSystemVariant({\n    prop: \"scale\",\n    variants: styleScales,\n  })}\n  ${space}\n`;\n\nexport default StyledProgress;\n","import styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { RadioProps, scales } from \"./types\";\n\nconst getScale = ({ scale }: RadioProps) => {\n  switch (scale) {\n    case scales.SM:\n      return \"24px\";\n    case scales.MD:\n    default:\n      return \"32px\";\n  }\n};\n\nconst getCheckedScale = ({ scale }: RadioProps) => {\n  switch (scale) {\n    case scales.SM:\n      return \"12px\";\n    case scales.MD:\n    default:\n      return \"20px\";\n  }\n};\n\nconst Radio = styled.input.attrs({ type: \"radio\" })<RadioProps>`\n  appearance: none;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  height: ${getScale};\n  width: ${getScale};\n  vertical-align: middle;\n  transition: background-color 0.2s ease-in-out;\n  border: 0;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n\n  &:after {\n    border-radius: 50%;\n    content: \"\";\n    height: ${getCheckedScale};\n    left: 6px;\n    position: absolute;\n    top: 6px;\n    width: ${getCheckedScale};\n  }\n\n  &:hover:not(:disabled):not(:checked) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.success};\n    &:after {\n      background-color: ${({ theme }) => theme.radio.handleBackground};\n    }\n  }\n\n  &:disabled {\n    cursor: default;\n    opacity: 0.6;\n  }\n  ${space}\n`;\n\nRadio.defaultProps = {\n  scale: scales.MD,\n  m: 0,\n};\n\nexport default Radio;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { space, layout } from \"styled-system\";\nimport { SkeletonProps, animation as ANIMATION, variant as VARIANT } from \"./types\";\n\nconst waves = keyframes`\n   from {\n        left: -150px;\n    }\n    to   {\n        left: 100%;\n    }\n`;\n\nconst pulse = keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Root = styled.div<SkeletonProps>`\n  min-height: 20px;\n  display: block;\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  border-radius: ${({ variant, theme }) => (variant === VARIANT.CIRCLE ? theme.radii.circle : theme.radii.small)};\n\n  ${layout}\n  ${space}\n`;\n\nconst Pulse = styled(Root)`\n  animation: ${pulse} 2s infinite ease-out;\n  transform: translate3d(0, 0, 0);\n`;\n\nconst Waves = styled(Root)`\n  position: relative;\n  overflow: hidden;\n  transform: translate3d(0, 0, 0);\n  &:before {\n    content: \"\";\n    position: absolute;\n    background-image: linear-gradient(90deg, transparent, rgba(243, 243, 243, 0.5), transparent);\n    top: 0;\n    left: -150px;\n    height: 100%;\n    width: 150px;\n    animation: ${waves} 2s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  }\n`;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ variant = VARIANT.RECT, animation = ANIMATION.PULSE, ...props }) => {\n  if (animation === ANIMATION.WAVES) {\n    return <Waves variant={variant} {...props} />;\n  }\n\n  return <Pulse variant={variant} {...props} />;\n};\n\nexport default Skeleton;\n","import styled, { css, keyframes } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { SvgProps } from \"./types\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst spinStyle = css`\n  animation: ${rotate} 2s linear infinite;\n`;\n\nconst Svg = styled.svg<SvgProps>`\n  align-self: center; // Safari fix\n  fill: ${({ theme, color }) => getThemeValue(`colors.${color}`, color)(theme)};\n  flex-shrink: 0;\n  ${({ spin }) => spin && spinStyle}\n  ${space}\n`;\n\nSvg.defaultProps = {\n  color: \"text\",\n  width: \"20px\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  spin: false,\n};\n\nexport default Svg;\n","import styled from \"styled-components\";\nimport { color } from \"styled-system\";\nimport { TabProps } from \"./types\";\n\nconst getBorderRadius = ({ scale }: TabProps) => (scale === \"md\" ? \"16px 16px 0 0\" : \"24px 24px 0 0\");\n\nconst getPadding = ({ scale }: TabProps) => (scale === \"md\" ? \"8px\" : \"16px\");\n\nconst getBorderBottom = ({ isActive }: TabProps) => (isActive ? \"2px solid #FD6262\" : \"\");\n\nconst Tab = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  border: 0;\n  outline: 0;\n  flex-grow: 1;\n  padding: ${getPadding};\n  border-radius: ${getBorderRadius};\n  border-bottom: ${getBorderBottom};\n  font-size: 12px;\n  font-weight: 400;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-grow: 0;\n  }\n\n  ${color}\n\n`;\n\nTab.defaultProps = {\n  scale: \"md\",\n};\n\nexport default Tab;\n","import styled, { DefaultTheme } from \"styled-components\";\nimport { space, variant } from \"styled-system\";\nimport { Colors } from \"../../theme/types\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nimport { TagProps, variants } from \"./types\";\n\ninterface ThemedProps extends TagProps {\n  theme: DefaultTheme;\n}\n\nconst getOutlineStyles = ({ outline, theme, variant: variantKey = variants.PRIMARY }: ThemedProps) => {\n  if (outline) {\n    const themeColorKey = styleVariants[variantKey].backgroundColor as keyof Colors;\n    const color = theme.colors[themeColorKey];\n\n    return `\n      color: ${color};\n      background: transparent;\n      border: 2px solid ${color};\n    `;\n  }\n\n  return \"\";\n};\n\nexport const StyledTag = styled.div<ThemedProps>`\n  align-items: center;\n  border-radius: 16px;\n  color: #ffffff;\n  display: inline-flex;\n  font-weight: 400;\n  white-space: nowrap;\n\n  & > svg {\n    fill: currentColor;\n  }\n\n  ${variant({\n    prop: \"scale\",\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${space}\n\n  ${getOutlineStyles}\n`;\n\nexport default null;\n","import styled, { DefaultTheme } from \"styled-components\";\nimport { space, typography, layout } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { TextProps } from \"./types\";\n\ninterface ThemedProps extends TextProps {\n  theme: DefaultTheme;\n}\n\nconst getColor = ({ color, theme }: ThemedProps) => {\n  return getThemeValue(`colors.${color}`, color)(theme);\n};\n\nconst getFontSize = ({ fontSize, small }: TextProps) => {\n  return small ? \"14px\" : fontSize || \"16px\";\n};\n\nconst Text = styled.div<TextProps>`\n  color: ${getColor};\n  font-size: ${getFontSize};\n  font-weight: ${({ bold }) => (bold ? 600 : 400)};\n  line-height: 1.5;\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\n  ${({ ellipsis }) =>\n    ellipsis &&\n    `white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;`}\n\n  ${space}\n  ${typography}\n  ${layout}\n`;\n\nText.defaultProps = {\n  color: \"text\",\n  small: false,\n  ellipsis: false,\n};\n\nexport default Text;\n"],"mappings":"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","sourceRoot":""}