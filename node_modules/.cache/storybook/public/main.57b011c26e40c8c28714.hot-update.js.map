{"version":3,"file":"main.57b011c26e40c8c28714.hot-update.js","sources":["webpack:///./src/widgets/Menu/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useEffect, useState } from \\\"react\\\";\\nimport noop from \\\"lodash/noop\\\";\\nimport { BrowserRouter, Link, MemoryRouter } from \\\"react-router-dom\\\";\\nimport Flex from \\\"../../components/Box/Flex\\\";\\nimport Box from \\\"../../components/Box/Box\\\";\\nimport Heading from \\\"../../components/Heading/Heading\\\";\\nimport Text from \\\"../../components/Text/Text\\\";\\nimport Input from \\\"../../components/Input/Input\\\";\\nimport Button from \\\"../../components/Button/Button\\\";\\nimport { Language } from \\\"./types\\\";\\nimport { links } from \\\"./config\\\";\\nimport { MenuEntry } from \\\"./components/MenuEntry\\\";\\nimport UserMenuComponent from \\\"./components/UserMenu\\\";\\nimport { UserMenuDivider, UserMenuItem } from \\\"./components/UserMenu/styles\\\";\\nimport { variants, Variant } from \\\"./components/UserMenu/types\\\";\\nimport Menu from \\\"./Menu\\\";\\nimport { LogoutIcon } from \\\"../../components/Svg\\\";\\n\\nexport default {\\n  title: \\\"Widgets/Menu\\\",\\n  component: Menu,\\n  argTypes: {},\\n};\\n\\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\\n  code: `en${i}`,\\n  language: `English${i}`,\\n  locale: `Locale${i}`,\\n}));\\n\\n// This hook is used to simulate a props change, and force a re rendering\\nconst useProps = () => {\\n  const [props, setProps] = useState({\\n    account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\n    login: noop,\\n    logout: noop,\\n    isDark: false,\\n    toggleTheme: noop,\\n    langs,\\n    setLang: noop,\\n    currentLang: \\\"EN\\\",\\n    cakePriceUsd: 0.023158668932877668,\\n    links,\\n    profile: null,\\n  });\\n\\n  useEffect(() => {\\n    const interval = setInterval(() => {\\n      setProps({\\n        account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\n        login: noop,\\n        logout: noop,\\n        isDark: false,\\n        toggleTheme: noop,\\n        langs,\\n        setLang: noop,\\n        currentLang: \\\"EN\\\",\\n        cakePriceUsd: 0.023158668932877668,\\n        links,\\n        profile: null,\\n      });\\n    }, 2000);\\n    return () => {\\n      clearInterval(interval);\\n    };\\n  }, []);\\n\\n  return props;\\n};\\n\\nexport const Connected: React.FC = () => {\\n  const props = useProps();\\n  return (\\n    <BrowserRouter>\\n      <Menu {...props}>\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Page body\\n          </Heading>\\n          <Text as=\\\"p\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\n            exercitation ullamco laboris nisi ut\\n          </Text>\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n};\\n\\nexport const NotConnected: React.FC = () => {\\n  return (\\n    <BrowserRouter>\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\n        <div>\\n          <h1>Page body</h1>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\n          mollit anim id est laborum.\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n};\\n\\nexport const WithoutConnectButton: React.FC = () => {\\n  return (\\n    <BrowserRouter>\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\n        <div>\\n          <h1>No connect button on top</h1>\\n          This variant is needed for info site\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n};\\n\\nexport const MenuEntryComponent: React.FC = () => {\\n  return (\\n    <Flex justifyContent=\\\"space-between\\\" p=\\\"16px\\\" style={{ backgroundColor: \\\"wheat\\\" }}>\\n      <MenuEntry>Default</MenuEntry>\\n      <MenuEntry secondary>Secondary</MenuEntry>\\n      <MenuEntry isActive>isActive</MenuEntry>\\n    </Flex>\\n  );\\n};\\n\\nexport const WithSubmenuSelected: React.FC = () => {\\n  return (\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\n      <Menu\\n        isDark={false}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        cakePriceUsd={0.23158668932877668}\\n        links={links}\\n      >\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Submenu leaderboard selected\\n          </Heading>\\n        </div>\\n      </Menu>\\n    </MemoryRouter>\\n  );\\n};\\n\\nexport const UserMenu: React.FC = () => {\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\n  const [text, setText] = useState(undefined);\\n\\n  const handleChange = (evt) => {\\n    const { value } = evt.target;\\n    setText(value);\\n  };\\n\\n  return (\\n    <BrowserRouter>\\n      <Box p=\\\"40px\\\">\\n        <Flex justifyContent=\\\"space-between\\\">\\n          <Box>\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\n              Variants\\n            </Heading>\\n            <Flex mb=\\\"16px\\\">\\n              {Object.keys(variants).map((variantKey) => (\\n                <Button\\n                  scale=\\\"sm\\\"\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\n                  ml=\\\"8px\\\"\\n                  onClick={() => setVariant(variants[variantKey])}\\n                >\\n                  {variants[variantKey].toUpperCase()}\\n                </Button>\\n              ))}\\n            </Flex>\\n            <Box py=\\\"8px\\\">\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\n            </Box>\\n          </Box>\\n          <UserMenuComponent variant={variant} text={text} account=\\\"0x8b017905DC96B38f817473dc885F84D4C76bC113\\\">\\n            <UserMenuItem type=\\\"button\\\" onClick={noop}>\\n              Wallet\\n            </UserMenuItem>\\n            <UserMenuItem type=\\\"button\\\">Transactions</UserMenuItem>\\n            { /*\\n            <UserMenuDivider />\\n            <UserMenuItem type=\\\"button\\\" disabled>\\n              Dashboard\\n            </UserMenuItem>\\n            <UserMenuItem type=\\\"button\\\" disabled>\\n              Portfolio\\n            </UserMenuItem>\\n            <UserMenuItem as={Link} to=\\\"/profile\\\">\\n              React Router Link\\n            </UserMenuItem>\\n            <UserMenuItem as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" target=\\\"_blank\\\">\\n              Link\\n            </UserMenuItem>\\n            <UserMenuDivider />\\n            */ }\\n            <UserMenuItem as=\\\"button\\\" onClick={noop}>\\n              <Flex alignItems=\\\"center\\\" justifyContent=\\\"space-between\\\" width=\\\"100%\\\">\\n                Disconnect\\n                <LogoutIcon />\\n              </Flex>\\n            </UserMenuItem>\\n          </UserMenuComponent>\\n        </Flex>\\n      </Box>\\n    </BrowserRouter>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Connected\":{\"startLoc\":{\"col\":35,\"line\":71},\"endLoc\":{\"col\":1,\"line\":97},\"startBody\":{\"col\":35,\"line\":71},\"endBody\":{\"col\":1,\"line\":97}},\"NotConnected\":{\"startLoc\":{\"col\":38,\"line\":99},\"endLoc\":{\"col\":1,\"line\":118},\"startBody\":{\"col\":38,\"line\":99},\"endBody\":{\"col\":1,\"line\":118}},\"WithoutConnectButton\":{\"startLoc\":{\"col\":46,\"line\":120},\"endLoc\":{\"col\":1,\"line\":131},\"startBody\":{\"col\":46,\"line\":120},\"endBody\":{\"col\":1,\"line\":131}},\"MenuEntryComponent\":{\"startLoc\":{\"col\":44,\"line\":133},\"endLoc\":{\"col\":1,\"line\":141},\"startBody\":{\"col\":44,\"line\":133},\"endBody\":{\"col\":1,\"line\":141}},\"WithSubmenuSelected\":{\"startLoc\":{\"col\":45,\"line\":143},\"endLoc\":{\"col\":1,\"line\":163},\"startBody\":{\"col\":45,\"line\":143},\"endBody\":{\"col\":1,\"line\":163}},\"UserMenu\":{\"startLoc\":{\"col\":34,\"line\":165},\"endLoc\":{\"col\":1,\"line\":230},\"startBody\":{\"col\":34,\"line\":165},\"endBody\":{\"col\":1,\"line\":230}}};\n    \nimport React, { useEffect, useState } from \"react\";\nimport noop from \"lodash/noop\";\nimport { BrowserRouter, Link, MemoryRouter } from \"react-router-dom\";\nimport Flex from \"../../components/Box/Flex\";\nimport Box from \"../../components/Box/Box\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Text from \"../../components/Text/Text\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport { Language } from \"./types\";\nimport { links } from \"./config\";\nimport { MenuEntry } from \"./components/MenuEntry\";\nimport UserMenuComponent from \"./components/UserMenu\";\nimport { UserMenuDivider, UserMenuItem } from \"./components/UserMenu/styles\";\nimport { variants, Variant } from \"./components/UserMenu/types\";\nimport Menu from \"./Menu\";\nimport { LogoutIcon } from \"../../components/Svg\";\n\nexport default {\n  title: \"Widgets/Menu\",\n  component: Menu,\n  argTypes: {},\n};\n\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\n  code: `en${i}`,\n  language: `English${i}`,\n  locale: `Locale${i}`,\n}));\n\n// This hook is used to simulate a props change, and force a re rendering\nconst useProps = () => {\n  const [props, setProps] = useState({\n    account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\n    login: noop,\n    logout: noop,\n    isDark: false,\n    toggleTheme: noop,\n    langs,\n    setLang: noop,\n    currentLang: \"EN\",\n    cakePriceUsd: 0.023158668932877668,\n    links,\n    profile: null,\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProps({\n        account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\n        login: noop,\n        logout: noop,\n        isDark: false,\n        toggleTheme: noop,\n        langs,\n        setLang: noop,\n        currentLang: \"EN\",\n        cakePriceUsd: 0.023158668932877668,\n        links,\n        profile: null,\n      });\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return props;\n};\n\nexport const Connected: React.FC = () => {\n  const props = useProps();\n  return (\n    <BrowserRouter>\n      <Menu {...props}>\n        <div>\n          <Heading as=\"h1\" mb=\"8px\">\n            Page body\n          </Heading>\n          <Text as=\"p\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n            exercitation ullamco laboris nisi ut\n          </Text>\n        </div>\n      </Menu>\n    </BrowserRouter>\n  );\n};;\n\nexport const NotConnected: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\"EN\" links={links}>\n        <div>\n          <h1>Page body</h1>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n          mollit anim id est laborum.\n        </div>\n      </Menu>\n    </BrowserRouter>\n  );\n};;\n\nexport const WithoutConnectButton: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\"EN\" links={links}>\n        <div>\n          <h1>No connect button on top</h1>\n          This variant is needed for info site\n        </div>\n      </Menu>\n    </BrowserRouter>\n  );\n};;\n\nexport const MenuEntryComponent: React.FC = () => {\n  return (\n    <Flex justifyContent=\"space-between\" p=\"16px\" style={{ backgroundColor: \"wheat\" }}>\n      <MenuEntry>Default</MenuEntry>\n      <MenuEntry secondary>Secondary</MenuEntry>\n      <MenuEntry isActive>isActive</MenuEntry>\n    </Flex>\n  );\n};;\n\nexport const WithSubmenuSelected: React.FC = () => {\n  return (\n    <MemoryRouter initialEntries={[\"/teams\"]}>\n      <Menu\n        isDark={false}\n        toggleTheme={noop}\n        langs={langs}\n        setLang={noop}\n        currentLang=\"EN\"\n        cakePriceUsd={0.23158668932877668}\n        links={links}\n      >\n        <div>\n          <Heading as=\"h1\" mb=\"8px\">\n            Submenu leaderboard selected\n          </Heading>\n        </div>\n      </Menu>\n    </MemoryRouter>\n  );\n};;\n\nexport const UserMenu: React.FC = () => {\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\n  const [text, setText] = useState(undefined);\n\n  const handleChange = (evt) => {\n    const { value } = evt.target;\n    setText(value);\n  };\n\n  return (\n    <BrowserRouter>\n      <Box p=\"40px\">\n        <Flex justifyContent=\"space-between\">\n          <Box>\n            <Heading size=\"sm\" mb=\"16px\">\n              Variants\n            </Heading>\n            <Flex mb=\"16px\">\n              {Object.keys(variants).map((variantKey) => (\n                <Button\n                  scale=\"sm\"\n                  variant={variant === variants[variantKey] ? \"primary\" : \"text\"}\n                  ml=\"8px\"\n                  onClick={() => setVariant(variants[variantKey])}\n                >\n                  {variants[variantKey].toUpperCase()}\n                </Button>\n              ))}\n            </Flex>\n            <Box py=\"8px\">\n              <Input value={text} onChange={handleChange} placeholder=\"Custom Text...\" />\n            </Box>\n          </Box>\n          <UserMenuComponent variant={variant} text={text} account=\"0x8b017905DC96B38f817473dc885F84D4C76bC113\">\n            <UserMenuItem type=\"button\" onClick={noop}>\n              Wallet\n            </UserMenuItem>\n            <UserMenuItem type=\"button\">Transactions</UserMenuItem>\n            { /*\n            <UserMenuDivider />\n            <UserMenuItem type=\"button\" disabled>\n              Dashboard\n            </UserMenuItem>\n            <UserMenuItem type=\"button\" disabled>\n              Portfolio\n            </UserMenuItem>\n            <UserMenuItem as={Link} to=\"/profile\">\n              React Router Link\n            </UserMenuItem>\n            <UserMenuItem as=\"a\" href=\"https://pancakeswap.finance\" target=\"_blank\">\n              Link\n            </UserMenuItem>\n            <UserMenuDivider />\n            */ }\n            <UserMenuItem as=\"button\" onClick={noop}>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n                Disconnect\n                <LogoutIcon />\n              </Flex>\n            </UserMenuItem>\n          </UserMenuComponent>\n        </Flex>\n      </Box>\n    </BrowserRouter>\n  );\n};\n\n\n\nConnected.parameters = { storySource: { source: \"() => {\\n  const props = useProps();\\n  return (\\n    <BrowserRouter>\\n      <Menu {...props}>\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Page body\\n          </Heading>\\n          <Text as=\\\"p\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\n            exercitation ullamco laboris nisi ut\\n          </Text>\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n}\" }, ...Connected.parameters };\nNotConnected.parameters = { storySource: { source: \"() => {\\n  return (\\n    <BrowserRouter>\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\n        <div>\\n          <h1>Page body</h1>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\n          mollit anim id est laborum.\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n}\" }, ...NotConnected.parameters };\nWithoutConnectButton.parameters = { storySource: { source: \"() => {\\n  return (\\n    <BrowserRouter>\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\n        <div>\\n          <h1>No connect button on top</h1>\\n          This variant is needed for info site\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n}\" }, ...WithoutConnectButton.parameters };\nMenuEntryComponent.parameters = { storySource: { source: \"() => {\\n  return (\\n    <Flex justifyContent=\\\"space-between\\\" p=\\\"16px\\\" style={{ backgroundColor: \\\"wheat\\\" }}>\\n      <MenuEntry>Default</MenuEntry>\\n      <MenuEntry secondary>Secondary</MenuEntry>\\n      <MenuEntry isActive>isActive</MenuEntry>\\n    </Flex>\\n  );\\n}\" }, ...MenuEntryComponent.parameters };\nWithSubmenuSelected.parameters = { storySource: { source: \"() => {\\n  return (\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\n      <Menu\\n        isDark={false}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        cakePriceUsd={0.23158668932877668}\\n        links={links}\\n      >\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Submenu leaderboard selected\\n          </Heading>\\n        </div>\\n      </Menu>\\n    </MemoryRouter>\\n  );\\n}\" }, ...WithSubmenuSelected.parameters };\nUserMenu.parameters = { storySource: { source: \"() => {\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\n  const [text, setText] = useState(undefined);\\n\\n  const handleChange = (evt) => {\\n    const { value } = evt.target;\\n    setText(value);\\n  };\\n\\n  return (\\n    <BrowserRouter>\\n      <Box p=\\\"40px\\\">\\n        <Flex justifyContent=\\\"space-between\\\">\\n          <Box>\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\n              Variants\\n            </Heading>\\n            <Flex mb=\\\"16px\\\">\\n              {Object.keys(variants).map((variantKey) => (\\n                <Button\\n                  scale=\\\"sm\\\"\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\n                  ml=\\\"8px\\\"\\n                  onClick={() => setVariant(variants[variantKey])}\\n                >\\n                  {variants[variantKey].toUpperCase()}\\n                </Button>\\n              ))}\\n            </Flex>\\n            <Box py=\\\"8px\\\">\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\n            </Box>\\n          </Box>\\n          <UserMenuComponent variant={variant} text={text} account=\\\"0x8b017905DC96B38f817473dc885F84D4C76bC113\\\">\\n            <UserMenuItem type=\\\"button\\\" onClick={noop}>\\n              Wallet\\n            </UserMenuItem>\\n            <UserMenuItem type=\\\"button\\\">Transactions</UserMenuItem>\\n            { /*\\n            <UserMenuDivider />\\n            <UserMenuItem type=\\\"button\\\" disabled>\\n              Dashboard\\n            </UserMenuItem>\\n            <UserMenuItem type=\\\"button\\\" disabled>\\n              Portfolio\\n            </UserMenuItem>\\n            <UserMenuItem as={Link} to=\\\"/profile\\\">\\n              React Router Link\\n            </UserMenuItem>\\n            <UserMenuItem as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" target=\\\"_blank\\\">\\n              Link\\n            </UserMenuItem>\\n            <UserMenuDivider />\\n            */ }\\n            <UserMenuItem as=\\\"button\\\" onClick={noop}>\\n              <Flex alignItems=\\\"center\\\" justifyContent=\\\"space-between\\\" width=\\\"100%\\\">\\n                Disconnect\\n                <LogoutIcon />\\n              </Flex>\\n            </UserMenuItem>\\n          </UserMenuComponent>\\n        </Flex>\\n      </Box>\\n    </BrowserRouter>\\n  );\\n}\" }, ...UserMenu.parameters };"],"mappingsaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAJA;AADA;AADA;AAuBA;AA1BA;AA0BA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AADA;AADA;AAiBA;AAnBA;AAmBA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AADA;AADA;AASA;AAXA;AAWA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AARA;AAQA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AADA;AATA;AADA;AAkBA;AApBA;AAoBA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AADA;AADA;AAYA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAhBA;AAoBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AArBA;AArBA;AADA;AADA;AAuDA;AAjEA;AAqEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}